{"version":3,"sources":["components/Tags.js","columns.js","components/Toolbar.js","components/Header.js","calculations.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["CameraTag","Chip","label","size","variant","style","display","this","props","visibility","color","backgroundColor","borderColor","React","LidarTag","border","RadarTag","RandomTag","name","AnalyzedTag","flexDirection","alignItems","borderRadius","TimelineDot","height","width","background","padding","opacity","margin","marginRight","PartiallyAnalyzedTag","IncompleteAnalyzedTag","isOverflown","element","scrollHeight","clientHeight","scrollWidth","clientWidth","useStyles","makeStyles","root","lineHeight","position","whiteSpace","overflow","textOverflow","GridCellExpand","value","wrapper","cellDiv","cellValue","anchorEl","setAnchorEl","classes","showFullCell","setShowFullCell","showPopper","setShowPopper","document","addEventListener","handleKeyDown","removeEventListener","nativeEvent","key","ref","className","onMouseEnter","isCurrentlyOverflown","current","onMouseLeave","top","Popper","open","marginLeft","Paper","elevation","minHeight","offsetHeight","Typography","GridCellExpandHREF","Link","href","target","verticalAlign","renderCellExpand","params","toString","colDef","columns","field","headerName","renderCell","getValue","id","align","type","valueFormatter","valueFormatted","Number","toLocaleString","sortable","hide","description","tagProps","sensors","split","includes","camera","filter","f","lidar","radar","length","other3","other2","other1","e","checkSensortypes","with","renderCellExpandHREF","theme","paddingTop","paddingLeft","paddingRight","textField","QuickSearchToolbar","GridToolbarFilterButton","GridToolbarColumnsButton","GridToolbarExport","TextField","hiddenLabel","onChange","placeholder","InputProps","startAdornment","fontSize","endAdornment","IconButton","title","onClick","clearSearch","header","right","menuButton","note","textTransform","breakpoints","down","lastUpdate","left","up","textAlign","Header","window","innerHeight","innerWidth","setDimensions","handleResize","_","useMediaQuery","json2mq","minWidth","AppBar","Toolbar","subtitle","Button","process","jsonData","require","complete","parComplete","incomplete","footbar","trafficSigns","pagination","direction","lights","marginInline","marginTop","CustomFooter","Container","Grid","container","justifyContent","item","xs","Box","sx","TablePagination","component","count","page","onPageChange","rowsPerPage","rows","rowsPerPageOptions","onRowsPerPageChange","customDatagrid","Window","legend","adDatasets","RenderExpandCellGrid","searchText","setSearchText","setPage","setRowsPerPage","Data","setRows","kopf","requestSearch","searchValue","searchRegex","RegExp","replace","filteredRows","row","Object","keys","some","test","DataGrid","disableColumnMenu","sortingOrder","HorizontalAlignment","VerticalScrollBarVisibility","components","Footer","onPageSizeChange","newPageSize","pageSize","componentsProps","toolbar","event","footer","newPage","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactGA","initialize","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d46a8c1b.chunk.js","sourcesContent":["import Chip from \"@material-ui/core/Chip\";\nimport * as React from \"react\";\nimport TimelineDot from '@mui/lab/TimelineDot';\n\nexport class CameraTag extends React.Component {\n    render() {\n        return <Chip label=\"camera\"\n                     size=\"small\"\n                     variant=\"outlined\"\n                     style={{display:this.props.visibility,  color:\"rgb(26, 188, 156)\", backgroundColor: 'rgba(233, 247, 239, 0.7)', borderColor:\"rgb(26, 188, 156)\"}}/>\n    }\n}\n\nexport class LidarTag extends React.Component {\n    render() {\n        return <Chip label=\"lidar\"\n                     size=\"small\"\n                     variant=\"outlined\"\n                     style={{color: 'rgb(203, 67, 53)', backgroundColor:'rgba(245, 238, 248, 0.7)', border: '1px solid rgb(203, 67, 53)', display: this.props.visibility}}/>\n    }\n}\n\nexport class RadarTag extends React.Component {\n    render() {\n        return <Chip label=\"radar\"\n                     size=\"small\"\n                     variant={\"outlined\"}\n                     style={{color: 'rgb(52, 152, 219 )', backgroundColor:'rgba(235, 245, 251, 0.7)', border: '1px solid rgb(52, 152, 219 )', display:this.props.visibility}}/>\n    }\n}\n\nexport class RandomTag extends React.Component {\n    render() {\n        return <Chip label={this.props.name}\n                     size={\"small\"}\n                     variant={\"outlined\"}\n                     style={{color: 'peru', border: '1px solid peru', backgroundColor: 'rgba(255, 173, 71, 0.2)', display: this.props.visibility}}/>\n    }\n}\nexport class AnalyzedTag extends React.Component {\n    render() {\n        return <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", border: \"1px solid white\",\n        borderRadius: \"10px\", backgroundColor: \"rgba(0, 0, 0, 0.2)\"}} >\n                            <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"red\", padding: \"0px\",\n                                opacity:\"0.3\", margin: \"1px\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                            <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"yellow\", padding: \"0px\",\n                                marginRight: \"1px\", opacity:\"0.3\", margin: \"1px\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                            <TimelineDot color={\"success\"} style={{height: \"3px\", width: \"3px\", padding: \"0px\",\n                                marginRight: \"1px\", margin: \"1px\"}}/>\n                        </div>\n    }\n}\nexport class PartiallyAnalyzedTag extends React.Component {\n    render() {\n        return <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", border: \"1px solid white\",\n            borderRadius: \"10px\", backgroundColor: \"rgba(0, 0, 0, 0.2)\"}} >\n                         <TimelineDot color={\"success\"} style={{height: \"3px\", width: \"3px\", padding: \"0\",\n                         opacity: \"0.3\", margin: \"1px\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                         <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"yellow\", padding: \"0\", margin:\"1px\"}}/>\n                         <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"red\", padding: \"0\",\n                             opacity: \"0.3\", margin: \"1px\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                </div>\n\n    }\n}\nexport class IncompleteAnalyzedTag extends React.Component {\n    render() {\n        return <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", border: \"1px solid white\",\n        borderRadius: \"10px\", backgroundColor: \"rgba(0, 0, 0, 0.2)\"}} >\n                        <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"red\", padding: \"0\", margin: \"1px\"}}/>\n                        <TimelineDot style={{height: \"3px\", width: \"3px\", background: \"yellow\", padding: \"0\", margin:\"1px\",\n                         opacity: \"0.3\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                        <TimelineDot color={\"success\"} style={{height: \"3px\", width: \"3px\", padding: \"0\", margin:\"1px\",\n                            opacity: \"0.3\", backgroundColor: \"rgba(0, 0, 0, 0.5)\"}}/>\n                     </div>\n    }\n}\n","import * as React from 'react';\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\"\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { makeStyles } from '@material-ui/styles';\nimport {CameraTag, LidarTag, RadarTag, RandomTag, AnalyzedTag, PartiallyAnalyzedTag, IncompleteAnalyzedTag} from \"./components/Tags\";\n\n\nfunction isOverflown(element) {\n    return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\n\n/***\n *\n *\n * @param description: contains the input of the field 'sensors' of the data sets\n * @param tagProps: properties of 6 tags for sensor types: 'camera', 'radar', 'lidar', 'other1', 'other2', 'other3'\n * @returns {string[]} returns array that contains all sensors that are NOT camera, lidar or radar\n *\n *\n * Function takes info on sensors in the respective data set; checks whether camera, lidar or radar are included;\n * returns info on up to 3 additional sensors\n */\nfunction checkSensortypes(description, tagProps){\n    try {\n        let sensors = description.split(\", \");\n        if (sensors.includes(\"camera\")) {\n            tagProps.camera='visible';\n            sensors = sensors.filter(function(f) { return f !== 'camera' });\n        }\n        if (sensors.includes(\"lidar\")) {\n            tagProps.lidar='visible';\n            sensors = sensors.filter(function(f) { return f !== 'lidar' });\n        }\n        if (sensors.includes(\"radar\")) {\n            tagProps.radar='visible';\n            sensors = sensors.filter(function(f) { return f !== 'radar' });\n        }\n        if (sensors.length===3) {\n            tagProps.other3='visible';\n            tagProps.other2 = 'visible';\n            tagProps.other1 = 'visible';\n        } else if (sensors.length===2) {\n            tagProps.other2 = 'visible';\n            tagProps.other1 = 'visible';\n        } else if ((sensors.length===1) && (sensors[0]!==\"\")) {\n            tagProps.other1 = 'visible';\n        }\n        return (sensors)\n    }\n    catch (e) {\n    }\n}\n\n\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        alignItems: 'center',\n        lineHeight: '24px',\n        width: '100%',\n        height: '100%',\n        position: 'relative',\n        display: 'flex',\n        '& .cellValue': {\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n        },\n    },\n}));\n\nconst GridCellExpand = React.memo(function GridCellExpand(props) {\n    const { width, value } = props;\n    const wrapper = React.useRef(null);\n    const cellDiv = React.useRef(null);\n    const cellValue = React.useRef(null);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const classes = useStyles();\n    const [showFullCell, setShowFullCell] = React.useState(false);\n    const [showPopper, setShowPopper] = React.useState(false);\n\n    const handleMouseEnter = () => {\n        const isCurrentlyOverflown = isOverflown(cellValue.current);\n        setShowPopper(isCurrentlyOverflown);\n        setAnchorEl(cellDiv.current);\n        setShowFullCell(true);\n    };\n\n    const handleMouseLeave = () => {\n        setShowFullCell(false);\n    };\n\n    React.useEffect(() => {\n        if (!showFullCell) {\n            return undefined;\n        }\n\n        function handleKeyDown(nativeEvent) {\n            // IE11, Edge (prior to using Bink?) use 'Esc'\n            if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n                setShowFullCell(false);\n            }\n        }\n\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [setShowFullCell, showFullCell]);\n\n    return (\n        <div\n            ref={wrapper}\n            className={classes.root}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n        >\n            <div\n                ref={cellDiv}\n                style={{\n                    height: 1,\n                    width,\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                }}\n            />\n            <div ref={cellValue} className=\"cellValue\">\n                {value}\n            </div>\n            {showPopper && (\n                <Popper\n                    open={showFullCell && anchorEl !== null}\n                    anchorEl={anchorEl}\n                    style={{ width, marginLeft: -17 }}\n                >\n                    <Paper\n                        elevation={1}\n                        style={{ minHeight: wrapper.current.offsetHeight - 3 }}\n                    >\n                        <Typography variant=\"body2\" style={{ padding: 8 }}>\n                            {value}\n                        </Typography>\n                    </Paper>\n                </Popper>\n            )}\n        </div>\n    );\n});\n\nconst GridCellExpandHREF = React.memo(function GridCellExpandHREF(props) {\n    const { width, value, name } = props;\n    const wrapper = React.useRef(null);\n    const cellDiv = React.useRef(null);\n    const cellValue = React.useRef(null);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const classes = useStyles();\n    const [showFullCell, setShowFullCell] = React.useState(false);\n    const [showPopper, setShowPopper] = React.useState(false);\n\n    const handleMouseEnter = () => {\n        const isCurrentlyOverflown = isOverflown(cellValue.current);\n        setShowPopper(isCurrentlyOverflown);\n        setAnchorEl(cellDiv.current);\n        setShowFullCell(true);\n    };\n\n    const handleMouseLeave = () => {\n        setShowFullCell(false);\n    };\n\n    React.useEffect(() => {\n        if (!showFullCell) {\n            return undefined;\n        }\n\n        function handleKeyDown(nativeEvent) {\n            // IE11, Edge (prior to using Bink?) use 'Esc'\n            if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n                setShowFullCell(false);\n            }\n        }\n\n        document.addEventListener('keydown', handleKeyDown);\n\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [setShowFullCell, showFullCell]);\n\n    return (\n        <div\n            ref={wrapper}\n            className={classes.root}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n        >\n            <div\n                ref={cellDiv}\n                style={{\n                    height: 1,\n                    width,\n                    display: 'block',\n                    position: 'absolute',\n                    top: 0,\n                }}\n            />\n            <div ref={cellValue} className=\"cellValue\">\n                <Link\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{marginLeft: 16}}\n                    href={name}\n                    target={'_blank'}\n                >\n                    {value}\n                </Link>\n            </div>\n            {showPopper && (\n                <Popper\n                    open={showFullCell && anchorEl !== null}\n                    anchorEl={anchorEl}\n                    style={{ width, marginLeft: -17, verticalAlign: \"middle\"}}\n                >\n                    <Paper\n                        elevation={1}\n                        style={{ minHeight: wrapper.current.offsetHeight - 3 }}\n                    >\n                        <Typography variant=\"body2\" style={{ padding: 8 }}>\n                            <Link\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                style={{marginLeft: 16}}\n                                href={name}\n                                target={'_blank'}\n                            >\n                                {value}\n                            </Link>\n                        </Typography>\n                    </Paper>\n                </Popper>\n            )}\n        </div>\n    );\n});\n\nGridCellExpand.propTypes = {\n    value: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n};\n\nfunction renderCellExpand(params) {\n    if(params.value!== \"-\" ) {\n        return (\n            <GridCellExpand\n                value={params.value ? params.value.toString() : ''}\n                width={params.colDef.width}\n            />\n        );\n    }\n    return \"\";\n}\n\nfunction renderCellExpandHREF(params, value, name){\n    return (\n        <GridCellExpandHREF\n            value= {value}\n            name = {name}\n            with= {params.colDef.width}\n        />\n    )\n\n}\n\nrenderCellExpand.propTypes = {\n    /**\n     * The column of the row that the current cell belongs to.\n     */\n    colDef: PropTypes.any.isRequired,\n    /**\n     * The cell value, but if the column has valueGetter, use getValue.\n     */\n    value: PropTypes.oneOfType([\n        PropTypes.instanceOf(Date),\n        PropTypes.number,\n        PropTypes.object,\n        PropTypes.string,\n        PropTypes.bool,\n    ]),\n};\n\nconst columns = [\n    {\n        field: 'id',\n        headerName: 'Name',\n        width: 240,\n        renderCell: (params) => {\n            if (params.getValue(params.id, 'completionStatus') ===\"complete\") {\n                return(\n                <div style={{display: \"flex\", flexDirection: \"row\", alignItems: \"flex-start\"}}>\n                    <AnalyzedTag/>\n                    <strong>\n                        <Link\n                            variant=\"contained\"\n                            size=\"small\"\n                            style={{marginLeft: 6, color: '#444444'}}\n                            href={params.getValue(params.id, 'href') || ''}\n                            target={'_blank'}\n                        >\n                            {params.getValue(params.id, 'id') || ''}\n                        </Link>\n                    </strong>\n                </div>)\n            }\n            else if (params.getValue(params.id, 'completionStatus') ===\"partially Complete\"){\n                return (\n                    <div style={{display: \"flex\", flexDirection: \"row\", alignItems: \"flex-start\"}}>\n                        <PartiallyAnalyzedTag/>\n                        <strong>\n                            <Link\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                style={{marginLeft: 6}}\n                                href={params.getValue(params.id, 'href') || ''}\n                                target={'_blank'}\n                            >\n                                {params.getValue(params.id, 'id') || ''}\n                            </Link>\n                        </strong>\n                    </div>\n                )\n            }\n            else if (params.getValue(params.id, 'completionStatus') ===\"incomplete\")\n                return (\n                    <div style={{display: \"flex\", flexDirection: \"row\", alignItems: \"flex-start\"}}>\n                        <IncompleteAnalyzedTag/>\n                        <strong>\n                            <Link\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"small\"\n                                style={{marginLeft: 6}}\n                                href={params.getValue(params.id, 'href') || ''}\n                                target={'_blank'}\n                            >\n                                {params.getValue(params.id, 'id') || ''}\n                            </Link>\n                        </strong>\n                    </div>\n                )\n        },\n    },\n    {\n        field: 'citationCount',\n        headerName: 'N° Citations',\n        width: 150,\n        align: 'right',\n        type: 'number',\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted !== \"0\" && valueFormatted !== \"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        }\n    },\n    {\n        field: 'size_hours',\n        headerName: 'Size [h]',\n        width: 105,\n        align: 'right',\n        type: \"number\",\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'size_storage',\n        headerName: 'Size [GB]',\n        width: 120,\n        align: 'right',\n        type: \"number\",\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'frames',\n        headerName: 'Frames',\n        width: 110,\n        align: 'right',\n        type: \"number\",\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'numberOfScenes',\n        headerName: 'N° Scenes',\n        width: 130,\n        align: 'right',\n        type: \"number\",\n        sortable: true,\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'samplingRate',\n        headerName: 'Sampling Rate [Hz]',\n        width: 180,\n        hide: true,\n        type: \"number\",\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'lengthOfScenes',\n        headerName: 'Scene Length [s]',\n        width: 165,\n        align: 'right',\n        type: \"number\",\n        valueFormatter: (params) => {\n            const valueFormatted = Number(params.value).toLocaleString();\n            if (valueFormatted!==\"0\" && valueFormatted!==\"NaN\")\n                return `${valueFormatted}`;\n            else\n                return \"\";\n        },\n    },\n    {\n        field: 'sensors',\n        headerName: 'Sensortypes',\n        description: 'types of sensors used in the dataset',\n        type: 'string',\n        width: 310,\n        sortable: false,\n        renderCell: (params) => {\n            const valueFormatted = params.value;\n            const tagProps = {\n                'camera': 'none',\n                'lidar': 'none',\n                'radar': 'none',\n                'other1': 'none',\n                'other2': 'none',\n                'other3': 'none'\n            };\n            const sensors = checkSensortypes(valueFormatted, tagProps);\n\n            if (sensors)\n                return (\n                    <div>\n                        <CameraTag visibility={tagProps.camera}/>\n                        <LidarTag visibility={tagProps.lidar}/>\n                        <RadarTag visibility={tagProps.radar}/>\n                        <RandomTag visibility={tagProps.other1} name={sensors[0]}/>\n                        <RandomTag visibility={tagProps.other2} name={sensors[1]}/>\n                        <RandomTag visibility={tagProps.other3} name={sensors[2]}/>\n                    </div>\n                );\n        },\n    },\n    {\n        field: \"sensorDetail\",\n        headerName: \"Sensors - Details\",\n        description: 'details on used sensors',\n        type: \"string\",\n        width: 400,\n        sortable: false,\n        hide: true,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'benchmark',\n        headerName: 'Benchmark',\n        description: 'This column has a value getter and is not sortable.',\n        sortable: false,\n        width: 360,\n        hide: true,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'annotations',\n        headerName: 'Annotations',\n        width: 350,\n        type: \"String\",\n        sortable: false,\n        hide: true,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'recordingPerspective',\n        headerName: 'Recording Perspective',\n        width: 180,\n        type: \"String\",\n        sortable: false,\n        hide: true,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'location',\n        headerName: 'Location',\n        width: 380,\n        hide: true,\n        type: \"string\",\n        sortable: false,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'rawData',\n        headerName: 'Provides raw data',\n        width: 150,\n        hide: true,\n        type: \"string\",\n        sortable: false,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'mapData',\n        headerName: 'Provides map data',\n        width: 150,\n        hide: true,\n        type: \"string\",\n        sortable: false,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'licensing',\n        headerName: 'Licensing',\n        width: 350,\n        sortable: false,\n        type: \"string\",\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'relatedDatasets',\n        headerName: 'Related Datasets',\n        width: 180,\n        hide: true,\n        type: \"string\",\n        sortable: false,\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'publishDate',\n        headerName: 'Publish Date',\n        width: 150,\n        hide: true,\n        type: \"date\",\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'lastUpdate',\n        headerName: 'Last Update',\n        width: 150,\n        hide: true,\n        type: \"date\",\n        renderCell: renderCellExpand\n    },\n    {\n        field: 'relatedPaper',\n        headerName: 'Related Paper',\n        width: 240,\n        hide: false,\n        type: \"string\",\n        renderCell: (params) => renderCellExpandHREF(params, params.getValue(params.id, 'paperTitle') || '', params.getValue(params.id, 'relatedPaper') || '')\n        /*renderCell: (params) => (\n            <strong>\n                <Link\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    style={{marginLeft: 16}}\n                    href={params.getValue(params.id, 'relatedPaper') || ''}\n                    target={'_blank'}\n                >\n                    {params.getValue(params.id, 'paperTitle') || ''}\n                </Link>\n            </strong>\n        )*/,\n    },\n];\n\nexport { columns };\n\n","import { makeStyles } from '@material-ui/core/styles';\nimport {\n    GridToolbarFilterButton,\n    GridToolbarColumnsButton,\n    GridToolbarExport\n} from '@mui/x-data-grid';\nimport TextField from '@material-ui/core/TextField';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport PropTypes from 'prop-types';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingTop: 5,\n        paddingLeft: 5,\n        paddingRight: 5,\n        display: 'flex',\n        color: 'rgb(0, 151, 230)'\n    },\n    textField: {\n        paddingLeft: 5,\n    },\n}));\n\nexport function QuickSearchToolbar(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <GridToolbarFilterButton style={{color: \"rgb(0, 151, 230)\"}}/>\n                <GridToolbarColumnsButton style={{color: \"rgb(0, 151, 230)\"}}/>\n                <GridToolbarExport style={{color: \"rgb(0, 151, 230)\"}}/>\n            </div>\n            <TextField hiddenLabel size={\"small\"}\n                color={\"info\"}\n                value={props.value}\n                onChange={props.onChange}\n                placeholder=\"search…\"\n                className={classes.textField}\n                InputProps={{\n                    startAdornment: <SearchIcon fontSize=\"small\" style={{color: \"rgb(0, 151, 230)\"}} />,\n                    endAdornment: (\n                        <IconButton\n                            title=\"Clear\"\n                            aria-label=\"Clear\"\n                            size=\"small\"\n                            style={{ visibility: props.value ? 'visible' : 'hidden'}}\n                            onClick={props.clearSearch}\n                        >\n                            <ClearIcon fontSize=\"small\" style={{color: \"rgb(0, 151, 230)\"}} />\n                        </IconButton>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nQuickSearchToolbar.propTypes = {\n    clearSearch: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n};\n","import * as React from 'react'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport json2mq from 'json2mq';\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        backgroundColor: \"white\"//\"rgb(120,120,120, 0.1)\",//\"rgb(0, 151, 230)\",\n    },\n    textField: {\n        position: \"absolute\",\n        right: \"1%\",\n    },\n    menuButton: {\n\n    },\n    note: {\n        position: \"absolute\",\n        right: \"0.5%\",\n        height: \"85%\",\n        border: \"2px solid rgb(0, 151, 230)\",\n        borderRadius: \"5px\",\n        paddingLeft: \"0.25%\",\n        paddingRight: \"0.25%\",\n        color: \"#444444\",\n        backgroundColor: \"white\",\n        textTransform: \"none\",\n        [theme.breakpoints.down('sm')]: {\n            visibility: \"hidden\"\n        }\n    },\n    lastUpdate: {\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"absolute\",\n        left: \"0.5%\",\n        height: \"50%\",\n        border: \"2px solid rgb(0, 151, 230)\",\n        borderRadius: \"5px\",\n        paddingLeft: \"0.5%\",\n        paddingRight: \"0.5%\",\n        color: \"#444444\",\n        textTransform: \"none\",\n        backgroundColor: \"white\",\n        [theme.breakpoints.down('sm')]: {\n            visibility: \"hidden\"\n        },\n        [theme.breakpoints.up('md')]: {\n            visibility: \"visible\"\n        }\n    },\n    title: {\n        margin: 'auto',\n        textAlign: 'center',\n        color: \"#444444\"\n    },\n}));\n\nexport function Header(props) {\n    const classes = useStyles();\n\n    const [, setDimensions] = React.useState({\n        height: window.innerHeight,\n        width: window.innerWidth\n    });\n    React.useEffect(() => {\n        function handleResize() {\n            setDimensions({\n                height: window.innerHeight,\n                width: window.innerWidth\n            })\n        }\n        window.addEventListener('resize', handleResize);\n        return _ => {\n            window.removeEventListener('resize', handleResize)\n        }\n    });\n\n\n    const matches = useMediaQuery(\n        json2mq({\n            //minWidth: 0.535*window.screen.width\n            minWidth: \"770px\"\n        }),\n    );\n    let visGit = 'hidden';\n    if (matches === false) {\n        //visContribute  = 'hidden';\n        //visGit = 'visible';\n    }\n\n\n\n\n    return <header>\n                <AppBar position=\"static\" className={classes.header}>\n                    <Toolbar variant={'dense'}>\n                        <div className={classes.title}>\n                            <Typography variant=\"h5\">\n                                {props.title}\n                            </Typography>\n                            <Typography variant=\"body1\">\n                                {props.subtitle}\n                            </Typography>\n                        </div>\n\n                        <Button className={classes.note} target={'_blank'} style={{visibility: visGit}} variant={\"caption\"}\n                                href={\"https://github.com/daniel-bogdoll/ad-datasets\"}>\n                            *GitHub\n                        </Button>\n                        <Button className={classes.note} target={'_blank'} variant={\"caption\"}\n                                href={\"https://github.com/daniel-bogdoll/ad-datasets\"}>\n                            *Could not find your dataset? <br/> Simply create a pull request ;)\n                        </Button>\n                        <Typography className={classes.lastUpdate} variant={\"caption\"} align={\"left\"}>\n                            Last Update: {process.env.REACT_APP_GIT_SHA}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </header>;\n\n\n}\n","const jsonData= require('./data_sorted.json');\nexport let complete = 0;\nexport let parComplete = 0;\nexport let incomplete = 0;\n\n\nfunction f() {\n    for (let key in jsonData) {\n        if(jsonData[key]['completionStatus']===\"complete\"){\n            complete++;\n        }\n        else if(jsonData[key]['completionStatus']===\"partially Complete\"){\n            parComplete++;\n        }\n        else if(jsonData[key]['completionStatus']===\"incomplete\"){\n            incomplete++;\n        }\n    }\n}\n\nf();\n\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {AnalyzedTag, IncompleteAnalyzedTag, PartiallyAnalyzedTag} from \"./Tags\";\nimport PropTypes from 'prop-types';\nimport { Typography } from '@mui/material';\nimport {complete, incomplete, parComplete} from \"../calculations\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n    footbar: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    trafficSigns: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-start\",\n        //fontSize: \"10px\",\n    },\n    pagination: {\n        //display: \"flex\",\n        //alignItems: \"center\",\n        //right: \"2%\"\n        direction: \"row\",\n        align: \"right\"\n    },\n    lights: {\n        marginInline: \"4%\",\n    },\n    description: {\n        marginTop: \"0\",\n    }\n}));\n\n\nexport function CustomFooter (props) {\n    const classes = useStyles();\n    return <footer className={classes.footbar}>\n                <Container>\n                    <Grid container direction=\"row\"\n                          justifyContent=\"space-between\"\n                          alignItems=\"baseline\">\n                        <Grid item xs={7}>\n                            <Box className={classes.trafficSigns} style={{marginTop: \"-20px\"}}>\n                                <AnalyzedTag className={classes.lights}/>\n                                <Typography className={classes.description} variant={\"body2\"} sx={{fontSize: 13}}>Completely Analyzed: {complete} </Typography>\n                                <PartiallyAnalyzedTag className={classes.lights}/>\n                                <Typography className={classes.description} variant={\"body2\"} sx={{fontSize: 13}}>Partially Analyzed: {parComplete} </Typography>\n                                <IncompleteAnalyzedTag/>\n                                <Typography className={classes.description} variant={\"body2\"} sx={{fontSize: 13}}>Missing Essential Information: {incomplete} </Typography>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={5}>\n                            <TablePagination\n                                className = {classes.pagination}\n                                component=\"div\"\n                                count = {props.count}\n                                page = {props.page}\n                                onPageChange = {props.onPageChange}\n                                rowsPerPage =  {props.rows}\n                                rowsPerPageOptions =  {[10, 20, 40]}\n                                onRowsPerPageChange = {props.onRowsPerPageChange}\n                            />\n                        </Grid>\n                    </Grid>\n                </Container>\n\n            </footer>\n}\nCustomFooter.propTypes = {\n    clearSearch: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    count: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n};","import * as React from 'react';\nimport { DataGrid} from '@mui/x-data-grid';\nimport {columns} from './columns.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Data from './data_sorted.json';\nimport {QuickSearchToolbar} from \"./components/Toolbar\";\nimport {Header} from \"./components/Header\";\nimport {CustomFooter} from \"./components/Footer\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    customDatagrid: {\n        height: \"100%\",\n        width: Window.innerWidth\n    },\n    legend: {\n        left: \"1%\",\n        position: \"absolute\",\n        fontSize: \"10px\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-start\",\n    },\n    pagination: {\n        alignItems: \"right\",\n    },\n    adDatasets: {\n        height: \"100vh\",\n        display:\"flex\",\n        flexDirection:\"column\"\n    }\n}));\n\n\nfunction escapeRegExp(value) {\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nexport default function RenderExpandCellGrid() {\n    const classes = useStyles();\n\n    const [searchText, setSearchText] = React.useState('');\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(20);\n    const [rows, setRows] = React.useState(Data);\n    const [, setDimensions] = React.useState({\n        height: window.innerHeight,\n        width: window.innerWidth\n    });\n\n    const kopf = React.createRef();\n\n\n    const onChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (value) => {\n        setRowsPerPage(parseInt(value, 10));\n        setPage(0);\n    };\n\n    const requestSearch = (searchValue) => {\n        setSearchText(searchValue);\n        const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\n        const filteredRows = Data.filter((row) => {\n            return Object.keys(row).some((field) => {\n                return searchRegex.test(row[field].toString());\n            });\n        });\n        setRows(filteredRows)\n    };\n\n    React.useEffect(() => {\n        function handleResize() {\n            setDimensions({\n                height: window.innerHeight,\n                width: window.innerWidth\n            })\n        }\n        window.addEventListener('resize', handleResize);\n        return _ => {\n            window.removeEventListener('resize', handleResize)\n        }\n    });\n    return (\n        <div className={classes.adDatasets} >\n            <Header ref={kopf} title={'ad-datasets'} subtitle={'Complete* and curated list of autonomous driving related datasets'}/>\n\n\n            <DataGrid rows={rows} columns={columns} disableColumnMenu={true} className={classes.customDatagrid}\n                      sortingOrder={['desc', 'asc']} page={page} HorizontalAlignment={'Stretch'} VerticalScrollBarVisibility={'Auto'}\n                      components={{ Toolbar: QuickSearchToolbar, Footer: CustomFooter}}\n                      onPageSizeChange={(newPageSize) => setPage(newPageSize)}\n                      pageSize={rowsPerPage}\n                      componentsProps={{\n                          toolbar: {\n                              value: searchText,\n                              onChange: (event) => requestSearch(event.target.value),\n                              clearSearch: () => requestSearch(''),\n                          },\n                          footer: {\n                              count: rows.length,\n                              page: page,\n                              rows: rowsPerPage,\n                              onPageChange: onChangePage,\n                              onRowsPerPageChange: (event) => handleChangeRowsPerPage(event.target.value)\n                          }\n                      }}\n            />\n        </div>\n    );\n\n}\n\n\n\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('G-K1D6XN13PQ');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}